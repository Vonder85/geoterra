---
export interface Props {
  title: string;
  description: string;
  details: string;
  icon: string;
  colorClass: 'primary' | 'accent' | 'secondary' | 'neutral';
  href?: string;
}

const { title, description, details, icon, colorClass, href } = Astro.props;

const colorClasses = {
  primary: 'bg-primary-100 text-primary-500',
  accent: 'bg-accent-100 text-accent-500',
  secondary: 'bg-secondary-100 text-secondary-500',
  neutral: 'bg-neutral-200 text-neutral-600'
};

const iconColorClass = colorClasses[colorClass];
---

<div class="bg-white rounded-lg shadow-lg p-6 hover:shadow-xl transition-shadow">
  <div class={`${iconColorClass.split(' ')[0]} w-16 h-16 rounded-full flex items-center justify-center mb-4`}>
    <svg class={`h-8 w-8 ${iconColorClass.split(' ')[1]}`} fill="none" stroke="currentColor" viewBox="0 0 24 24">
      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d={icon}/>
    </svg>
  </div>
  <h3 class="text-xl font-bold text-neutral-800 mb-2">{title}</h3>
  <p class="text-sm text-neutral-600 mb-4">{description}</p>
  <div class={`text-xs ${iconColorClass.split(' ')[1]} font-medium`} set:html={details}></div>
  {href && (
    <a href={href} class="inline-block mt-4 text-sm font-medium text-accent-600 hover:text-accent-700 transition-colors">
      En savoir plus â†’
    </a>
  )}
</div>